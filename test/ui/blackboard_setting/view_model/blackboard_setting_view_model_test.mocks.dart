// Mocks generated by Mockito 5.4.6 from annotations
// in work_photo_app_sample/test/ui/blackboard_setting/view_model/blackboard_setting_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:work_photo_app_sample/data/services/blackboard_setting_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BlackboardSettingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlackboardSettingService extends _i1.Mock
    implements _i2.BlackboardSettingService {
  MockBlackboardSettingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> save({
    required String? project,
    required String? site,
    required int? workTypeKey,
    required String? forest,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#save, [], {
              #project: project,
              #site: site,
              #workTypeKey: workTypeKey,
              #forest: forest,
            }),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> load() =>
      (super.noSuchMethod(
            Invocation.method(#load, []),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);
}
